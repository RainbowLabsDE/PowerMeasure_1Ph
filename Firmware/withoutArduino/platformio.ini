; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
src_dir = User
default_envs = PWM

[env]
platform = https://github.com/Community-PIO-CH32V/platform-ch32v.git#2a620b0
board = genericCH32V003F4P6
framework = noneos-sdk

board_build.cpp_support = yes
board_build.use_builtin_system_code = no    # provide own SystemInit / SystemCoreClockUpdate etc.
lib_extra_dirs = 
    ; ../common
    ; modbus_lib-master
lib_deps = https://github.com/ceremcem/modbus_lib
build_flags =
    -I User                                 # include src folder (so system_ch32v00x.h can be found)
    ; -I User/modbus_lib-master
    ; -E -dM 
    ; -D DEBUG_EN=1
    ; -D VARIANT_PWM=0
    ; -D VARIANT_WS2812=0
    
; upload_protocol = minichlink
; debug_tool = minichlink

# Temporarily overwrite WCH framework with own version due to SDI printf bug (https://github.com/openwch/ch32v003/pull/56)
platform_packages =
    framework-wch-noneos-sdk @ https://github.com/LeoDJ/framework-wch-noneos-sdk#7ec962c

[env:PWM]
build_flags =
    -I User
    -D SDI_PRINT=1  ; will block, when not connected to SDI print
    -D DEBUG_EN=1
    ; -I User/modbus_lib.master
    ; -D VARIANT_PWM=1

; [env:WS2812]
; build_unflags = -Os
; build_flags =
;     -I User
;     -D VARIANT_WS2812=1
;     -D RBLB_LOWOVERHEAD
;     -O3                     ; needed so RBLB::handleByte is fast enough for 3MBaud